{"version":3,"sources":["services/firebase.js","Nav.js","Home.js","utils/mes.js","ExpensasPDFButton.js","utils/pdfExpensa.js","ExpensasDescargar.js","ExpensasListado.js","ExpensasRow.js","ExpensaForm.js","ExpensaCrear.js","ReportesListado.js","ReporteCrear.js","helpers/auth.js","Login.js","Local.js","WrongPage.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","db","database","Nav","props","state","user","currentUser","className","this","email","to","Component","Home","nombresMeses","numMes","pos","ExpensasPDFButton","info","data","property","newOb","push","porcentajeAPagar","parseInt","total","porcentaje","Button","backgroundColor","color","onClick","filename","extraInfo","title","nombreMes","mes","headers","doc","jsPDF","orientation","unit","format","liveArea","xPositions","setFontSize","text","forEach","heading","index","hasOwnProperty","label","xPos","pageMargin","xPositionForCurrentHeader","length","line","headerYPos","nextYPos","baseYPosForRows","row","rIndex","rowHeights","column","cIndex","longText","splitTextToSize","String","key","rowHeight","getLineHeight","Math","max","addPage","save","pdf","btnName","ExpensasDescargar","console","log","Box","p","ExpensasListado","meses","readError","setState","ref","on","snapshot","snap","mapExpensa","val","error","message","child","remove","List","map","variantColor","variant","deleteExpensa","Icon","name","size","ExpensasRow","SimpleGrid","columns","spacingX","spacingY","FormControl","isInvalid","errors","Input","i","placeholder","defaultValue","register","validate","value","ExpensaForm","useForm","handleSubmit","formState","a","today","Date","date","getMonth","anio","getFullYear","getMontoTotal","uid","alert","item","onSubmit","values","submitExpensa","elems","elem","mt","isLoading","isSubmitting","type","ExpensaCrear","ultimoMes","isLoaded","orderByKey","limitToLast","ReporteListado","ReporteCrear","signInWithGoogle","provider","GoogleAuthProvider","signInWithPopup","signInWithGitHub","GithubAuthProvider","Login","password","handleChange","bind","googleSignIn","githubSignIn","event","target","preventDefault","signInWithEmailAndPassword","autoComplete","isRequired","FormLabel","htmlFor","onChange","Local","local","WrongPage","PrivateRoute","component","authenticated","rest","render","pathname","from","location","PublicRoute","Locales","local_numero","match","params","id","App","loading","onAuthStateChanged","role","ThemeProvider","CSSReset","path","exact","ExpensasCrear","ReportesListado","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.a49425a2.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nconst config = {\n  apiKey: \"AIzaSyCV7q9QR3QI2B041SeKSwcGqUTr50w9EzA\",\n  authDomain: \"expensasterminal.firebaseapp.com\",\n  databaseURL: \"https://expensasterminal.firebaseio.com\",\n  projectId: \"expensasterminal\",\n  storageBucket: \"expensasterminal.appspot.com\",\n  messagingSenderId: \"1007415415937\",\n  appId: \"1:1007415415937:web:85b58e1389152342d96980\"\n};\n\nfirebase.initializeApp(config);\nexport const auth = firebase.auth;\nexport const db = firebase.database();","import React, { Component } from 'react';\nimport './App.css'\nimport {Link} from 'react-router-dom';\nimport { auth } from \"./services/firebase\"\n\nclass Nav extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          user: auth().currentUser\n        };\n      }\n\n      render(){\n        return(\n            <nav className=\"nav-per\">\n                <ul className=\"nav-links\">\n                    { (this.state.user && this.state.user.email === \"graciela.barone.ohf@gmail.com\") ?\n                    <Link to=\"/expensas\">\n                        <li>Expensas</li>\n                    </Link> : <li>Locales</li>\n                    }\n                </ul>\n            </nav>\n        )\n      }\n  }\n  \n  export default Nav;","import React from 'react';\n\nfunction Home() {\n    return(<h1>Home</h1>)\n  }\n  \n  export default Home;","\nconst nombresMeses = [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\",\n\"Julio\", \"Agosto\", \"Septiembre\", \"Octubre\",\n\"Noviembre\", \"Diciembre\"];\n\nexport default function(numMes){\n    var pos = numMes -1;\n    if (pos === 12){pos = 0}\n    return nombresMeses[pos];\n}","import React from 'react';\nimport pdf from './utils/pdfExpensa'\nimport nombreMes from \"./utils/mes\"\nimport './App.css'\n\n\nimport {\n  Button\n} from \"@chakra-ui/core\";\n\nfunction ExpensasPDFButton(props) {\n\n  let info = [];\n  if (props.data) {\n    for (const property in props.data.info) {\n      var newOb = {\"title\": props.data.info[property][\"name\"], \"value\": props.data.info[property][\"value\"]};\n      info.push(newOb);\n    }\n  }\n  var porcentajeAPagar = parseInt(props.data.total) * parseInt(props.porcentaje) / 100;\n  info.push({\"title\": \"  \" , \"value\": \" \"});\n  info.push({\"title\": \"Total\" , \"value\": props.data.total});\n  info.push({\"title\": \"Porcentaje \" + props.porcentaje + \"%\" , \"value\": porcentajeAPagar});\n\n  return(\n      <Button backgroundColor=\"#407088\" color=\"white\" className=\"btn-pdf\" onClick={() => {\n        // Mind we are dynamically setting filename to be the\n        // users movie input text, this can be anything you want.\n        const filename = `expensa${props.porcentaje}.pdf`\n        // All we want for this example are:\n        // Title, Release Date, Description, Vote Average\n        // This is important to the function we are building\n        // because it sets the order in which we will display data\n        const headers = [\n          {key: 'title', label: ' ', xPos:200},\n          {key: 'value', label: ' ', xPos:500},\n        ]\n\n        //En extraInfo puedo agregar datos extra\n        const extraInfo = {title: \"Expensas mes \" + nombreMes(parseInt(props.data.mes))}\n\n        // Here's the call for our pdf function\n        // Because of the placeholder code in our pdf.js file,\n        // clicking on this should render a save dialog\n        // and downloading should render an empty pdf\n        pdf({data: info, headers, filename, extraInfo})\n      }}>\n      {props.btnName ? props.btnName : props.porcentaje}\n    </Button>\n    );\n\n}\n  \nexport default ExpensasPDFButton;","import jsPDF from 'jspdf'\n\nexport default function({data, headers, filename, extraInfo}) {\n  \n  const doc = new jsPDF({\n    orientation: 'l',\n    unit: 'pt',\n    format: 'a4',\n  })\n\n  // Get the page total pt height and pt width based on\n  // https://github.com/MrRio/jsPDF/blob/ddbfc0f0250ca908f8061a72fa057116b7613e78/jspdf.js#L59\n  // And because we are in landscape mode (see orientation in jsPDF config options above)\n  // I flipped the width x height values to reflect this\n  const pageDimensions = {\n    height: 595.28,\n    width: 841.89\n  }\n\n  // Set some general padding to the document\n  const pageMargin = 50\n\n  // The live area of a document represents the\n  // area of the page that will have content.\n  // Here I am saying whatever the dimension parameters,\n  // take off the margin on both sides.\n  const liveArea = {\n    width: pageDimensions.width - pageMargin ,\n    height: pageDimensions.height - pageMargin\n  }\n\n  // Let's set up a standard padding that we can add to known coordinates\n  const padding = 10\n  const xPositions = []\n\n  doc.setFontSize(20)\n  doc.text(extraInfo.title, 300 , 50)\n  doc.setFontSize(15)\n  const headerYPos = pageMargin + 50\n\n  headers.forEach((heading, index) => {\n    // If we choose to, we can add a prop 'xPos' to the headers config in App.js\n    // this will set the starting positions of the headers if we need to define column widths\n    // I'm choosing to just space all columns evenly :)\n    if (heading.hasOwnProperty('xPos')) {\n      doc.text(heading.label, heading.xPos, headerYPos)\n      xPositions.push(heading.xPos)\n    } else {\n      // Here we are starting at pageMargin's xPosition plus whatever index we are on\n      // multiplied by the number of columns needed\n      // column 1 starts at: pageMargin(50pt) + index(0) * (liveArea(791)/amountOfColumns(4))(791/4 = 197.75pt per column) = 50\n      // column 2 starts at: 50 + 1 * 197.75 =  247.75\n      // column 3 starts at: 50 + 2 * 197.75 =  445.5\n      // column 4 starts at: 50 + 3 * 197.75 =  643.25\n      const xPositionForCurrentHeader = pageMargin + index * (liveArea.width/(headers.length))\n      const yPositionForHeaders = headerYPos\n      doc.text(heading.label, index === 0 ? xPositionForCurrentHeader:(xPositionForCurrentHeader + padding), yPositionForHeaders)\n\n      // We will also need some way to track these xPositions and the column width,\n      // So let's push them to an array that will key off of their index\n      xPositions.push(index === 0 ? xPositionForCurrentHeader:(xPositionForCurrentHeader + padding))\n    }\n  })\n\n  doc.line(pageMargin * 2, headerYPos + 5, liveArea.width - pageMargin, headerYPos + 5)\n\n  const baseYPosForRows = headerYPos + padding\n  let nextYPos = baseYPosForRows + padding + 10\n\n  // ROWS\n  data.forEach((row, rIndex) => {\n    // Here we are going to collect all columns potential max heights\n    // Before we determine the nextYPosition we have to grab the tallest value\n    // and add that to the previous height.\n    const rowHeights = []\n\n    /*\n    *\n    * Row styles go here\n    *\n    * */\n\n    // COLUMNS\n    headers.forEach((column, cIndex) => {\n      const longText = doc.splitTextToSize(String(row[column.key]), xPositions[cIndex] - xPositions[cIndex !== 0 && cIndex - 1] )\n      const rowHeight = longText.length * doc.getLineHeight()\n      rowHeights.push(rowHeight)\n\n      /*\n      *\n      *  Column styles go here\n      *\n      * */\n\n      doc.text(longText, xPositions[cIndex], nextYPos)\n      // if (_row[column.subKey]) {\n      //   const longMeta = doc.splitTextToSize(_row[column.subKey], column.width)\n      //   doc.text(longMeta, 50, nextYPos + 25)\n      // }\n    })\n\n    nextYPos = nextYPos + padding + Math.max(...rowHeights, 30)\n\n    // When generating looped data, you may need to add pages manually.\n    // The good thing is that we've defined our live area boundaries,\n    // and can add a new page when our yPosition exceeds them. We need\n    // to take some care to reset the yPosition because if you don't:\n    // the yPosition will persist to the next page, and more than likely\n    // disappear from view as your yPosition grows.\n    if (nextYPos > liveArea.height) {\n      doc.addPage()\n      nextYPos = baseYPosForRows\n    }\n  })\n\n  doc.line(pageMargin * 2, nextYPos - 15 , liveArea.width - pageMargin, nextYPos - 15)\n\n  doc.save(filename)\n}","import React from 'react';\nimport './App.css'\nimport ExpensasPDFButton from './ExpensasPDFButton';\n\nimport { Box } from \"@chakra-ui/core\";\n\nfunction ExpensasDescargar(props){\n\n  console.log(props);\n\n  return(\n        <Box p={4} className=\"download-buttons\">\n            <ExpensasPDFButton porcentaje={20} data={props.data} />\n            <ExpensasPDFButton porcentaje={16} data={props.data} />\n            <ExpensasPDFButton porcentaje={17} data={props.data} />\n            <ExpensasPDFButton porcentaje={30} data={props.data} />\n        </Box>\n        );\n  }\n  \n  export default ExpensasDescargar;","import React, { Component }  from \"react\";\nimport './App.css'\nimport {Link} from 'react-router-dom';\nimport { db, auth } from \"./services/firebase\"\nimport nombreMes from \"./utils/mes\"\n\nimport {\n    List,\n    ListItem,\n    Box,\n    Icon,\n    Button\n} from \"@chakra-ui/core\";\n\nimport ExpensasDescargar from \"./ExpensasDescargar\";\n\nclass ExpensasListado extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          user: auth().currentUser,\n          meses: [],\n          readError: null,\n        };\n      }\n    \n    async componentDidMount() {\n        this.setState({ readError: null });\n        try {\n          db.ref(\"expensas\").on(\"value\", snapshot => {\n            let meses = [];\n            snapshot.forEach((snap) => {\n                let mapExpensa = snap.val();\n                mapExpensa.key = snap.key;\n                console.log(mapExpensa);\n                meses.push(mapExpensa);\n            });\n            this.setState({ meses });\n            console.log(meses);\n          });\n        } catch (error) {\n          this.setState({ readError: error.message });\n        }\n    }\n\n    deleteExpensa(key){\n        console.log(key);\n        try {\n            db.ref('expensas').child(key).remove();\n        } catch(error){\n            console.log(\"Error al eliminar\");\n            console.log(error);\n        }\n    }\n\n    render(){\n        return (\n            <Box p={4}>\n                <h1 className=\"sub-title\">Expensas</h1>\n                <List className=\"list-expensa\">\n                    {this.state.meses.map(mes => (\n                        <ListItem className=\"list-expensa-row\">\n                            <div className=\"list-expensa-row-elem\">\n                                <h3>\n                                    {nombreMes(parseInt(mes.mes))}\n                                </h3>\n                            </div>\n                            <div className=\"list-expensa-row-elem list-expensa-btns\">\n                                {mes.info ? <ExpensasDescargar data={mes}/> : \".\"}\n                                <Button variantColor = \"red\" variant=\"solid\" onClick={() => this.deleteExpensa(mes.key)}>\n                                    <Icon name=\"delete\" size=\"20px\" color=\"white\" />\n                                </Button>\n                            </div>\n                        </ListItem>\n                    ))}\n                </List>\n                <Link to=\"/expensas/crear\" className=\"crear-expensa-btn\">\n                    <Icon name=\"add\" size=\"20px\" color=\"red.500\" />\n                    Crear nuevo mes\n                </Link>\n            </Box>\n        );\n    }\n}\n\nexport default ExpensasListado","import React, { Component } from 'react';\nimport './App.css'\n\nimport {\n    FormControl,\n    Input,\n    SimpleGrid,\n  } from \"@chakra-ui/core\";\n\nclass ExpensasRow extends Component {\n\n    render(){\n        return(\n            <SimpleGrid columns={2} spacingX=\"40px\" spacingY=\"20px\">\n                <FormControl isInvalid={this.props.errors.name}>\n                <Input\n                    name={this.props.i + \".name\"}\n                    placeholder=\"Nombre\"\n                    defaultValue={this.props.name}\n                    ref={this.props.register({ validate: true })}\n                />\n                </FormControl>\n                <FormControl isInvalid={this.props.errors.name}>\n                <Input\n                    name={this.props.i + \".value\"}\n                    placeholder=\"Valor\"\n                    defaultValue={this.props.value}\n                    ref={this.props.register({ validate: true })}\n                />\n                </FormControl>\n            </SimpleGrid>\n        )\n    }\n}\n  \n  export default ExpensasRow;","import React  from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { db } from \"./services/firebase.js\"\nimport './App.css'\n\nimport {\n  Button,\n  Box\n} from \"@chakra-ui/core\";\n\nimport ExpensasRow from \"./ExpensasRow\";\n\nfunction ExpensaForm(props) {\n\n  const { handleSubmit, errors, register, formState } = useForm();\n\n  async function submitExpensa(map) {\n    const today = new Date();\n    try {\n      await db.ref(\"expensas\").push({\n        info: map,\n        date: today,\n        mes: today.getMonth(),\n        anio: today.getFullYear(),\n        total: getMontoTotal(map),\n        uid: props.user.uid\n      });\n      alert(\"Expensa creada correctamente!\");\n    } catch (error) {\n      console.log(error);\n      console.log(\"Falló\");\n    }\n  }\n\n  function getMontoTotal(info){\n    var total = 0;\n    for (const item in info) {\n      total += parseInt(info[item][\"value\"]);\n    }\n    return total;\n  }\n\n  function onSubmit(values) {\n    console.log(values);\n    submitExpensa(values);\n  }\n\n  function returnForm(){\n\n    return (\n      <form onSubmit={handleSubmit(onSubmit)} className=\"form-data\">\n        <Box p={8}>\n            {props.elems.map( (elem, i) =>\n                <ExpensasRow errors={errors} register={register} i={i}\n                  name={elem.name} value={elem.value} />\n            )}\n          <Button\n            mt={4}\n            variantColor=\"teal\"\n            isLoading={formState.isSubmitting}\n            type=\"submit\">\n            Crear\n          </Button>\n        </Box>\n      </form>\n    );\n  }\n\n  return (\n    <Box p={8}>\n      <h1 className=\"sub-title\">Nuevo Mes</h1>\n      {returnForm()}\n    </Box>\n  );\n}\n  \nexport default ExpensaForm;","import React, { Component }  from \"react\";\nimport ExpensaForm from \"./ExpensaForm\";\nimport { db, auth } from \"./services/firebase\"\n\n\nclass ExpensaCrear extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          user: auth().currentUser,\n          info: [],\n          readError: null,\n          ultimoMes: [],\n          isLoaded: false\n        };\n      }\n    \n    async componentDidMount() {\n        this.setState({ readError: null });\n        try {\n          db.ref(\"expensas\").orderByKey().limitToLast(1).on(\"value\", snapshot => {\n            snapshot.forEach((snap) => {\n                let info = snap.val().info;\n                this.setState({info: info, isLoaded: true});\n            });\n          }\n          );\n        } catch (error) {\n          this.setState({ readError: error.message });\n        }\n    }\n\n    render(){\n        const isLoaded = this.state.isLoaded;\n        return(\n          isLoaded ?\n            <ExpensaForm elems={this.state.info} user={this.state.user} /> : <h1>Loading</h1>\n        )\n    }\n\n}\n\nexport default ExpensaCrear","import React, { Component }  from \"react\";\n// import { db } from \"./services/firebase\"\n\nclass ReporteListado extends Component{\n\n    render(){\n        return(<h1>Listado de Reportes</h1>);\n    }\n\n}\n\nexport default ReporteListado","import React, { Component }  from \"react\";\n// import { db } from \"./services/firebase\"\n\nclass ReporteCrear extends Component{\n\n    render(){\n        return(<h1>Crear Reporte</h1>);\n    }\n\n}\n\nexport default ReporteCrear","import { auth } from \"../services/firebase\";\n\nexport function signup(email, password) {\n  return auth().createUserWithEmailAndPassword(email, password);\n}\n\nexport function signin(email, password) {\n  return auth().signInWithEmailAndPassword(email, password);\n}\n\nexport function signInWithGoogle() {\n  const provider = new auth.GoogleAuthProvider();\n  return auth().signInWithPopup(provider);\n}\n\nexport function signInWithGitHub() {\n  const provider = new auth.GithubAuthProvider();\n  return auth().signInWithPopup(provider);\n}\n\nexport function logout() {\n  return auth().signOut();\n}","import React, { Component } from \"react\";\nimport { signin, signInWithGoogle, signInWithGitHub } from \"./helpers/auth\";\nimport './App.css'\nimport {FormControl, Input, FormLabel, Button} from \"@chakra-ui/core\";\n\n\nexport default class Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      error: null,\n      email: \"\",\n      password: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.googleSignIn = this.googleSignIn.bind(this);\n    this.githubSignIn = this.githubSignIn.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    this.setState({ error: \"\" });\n    try {\n      await signin(this.state.email, this.state.password);\n    } catch (error) {\n      this.setState({ error: error.message });\n    }\n  }\n\n  async googleSignIn() {\n    try {\n      await signInWithGoogle();\n    } catch (error) {\n      this.setState({ error: error.message });\n    }\n  }\n\n  async githubSignIn() {\n    try {\n      await signInWithGitHub();\n    } catch (error) {\n      this.setState({ error: error.message });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container container-form\">\n        <form\n          className=\"mt-5 py-5 px-5 login-form\"\n          autoComplete=\"off\"\n          onSubmit={this.handleSubmit}>\n          <h1>\n            Login\n          </h1>\n          <div className=\"form-group\">\n            {/* <input\n              className=\"form-control\"\n              placeholder=\"Email\"\n              name=\"email\"\n              type=\"email\"\n              onChange={this.handleChange}\n              value={this.state.email}\n            /> */}\n            <FormControl isRequired>\n              <FormLabel htmlFor=\"fname\">\n                Email\n              </FormLabel>\n              <Input\n                onChange={this.handleChange} \n                value={this.state.email} \n                name=\"email\"\n                type=\"email\"\n                placeholder=\"Email\" />\n            </FormControl>\n          </div>\n          <div className=\"form-group\">\n            {/* <input\n              className=\"form-control\"\n              placeholder=\"Password\"\n              name=\"password\"\n              onChange={this.handleChange}\n              value={this.state.password}\n              type=\"password\"\n            /> */}\n            <FormControl isRequired>\n              <FormLabel htmlFor=\"fname\">\n                Contraseña\n              </FormLabel>\n              <Input\n                onChange={this.handleChange} \n                value={this.state.password} \n                name=\"password\"\n                type=\"password\"\n                placeholder=\"contraseña\" />\n            </FormControl>\n          </div>\n          <div className=\"form-group\">\n            {this.state.error ? (\n              <p className=\"text-danger\">{this.state.error}</p>\n            ) : null}\n            <Button\n              mt={4}\n              variantColor=\"teal\"\n              type=\"submit\">\n            Login\n            </Button>\n            {/* <button className=\"btn btn-primary px-5\" type=\"submit\">Login</button> */}\n          </div>\n          {/* <p>You can also log in with any of these services</p>\n          <button className=\"btn btn-danger mr-2\" type=\"button\" onClick={this.googleSignIn}>\n            Sign in with Google\n          </button>\n          <button className=\"btn btn-secondary\" type=\"button\" onClick={this.githubSignIn}>\n            Sign in with GitHub\n          </button>\n          <hr />\n          <p>\n            Don't have an account? <Link to=\"/signup\">Sign up</Link>\n          </p> */}\n        </form>\n\n      </div>\n    );\n  }\n}","import React, { Component }  from \"react\";\nimport './App.css'\nimport { db, auth } from \"./services/firebase\"\nimport nombreMes from \"./utils/mes\"\n\nimport {\n    List,\n    ListItem,\n    Box\n} from \"@chakra-ui/core\";\n\nimport ExpensasPDFButton from './ExpensasPDFButton';\n\n\nclass Local extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state = {\n          user: auth().currentUser,\n          meses: [],\n          readError: null,\n        };\n      }\n    \n    async componentDidMount() {\n        this.setState({ readError: null });\n        try {\n          db.ref(\"expensas\").on(\"value\", snapshot => {\n            let meses = [];\n            snapshot.forEach((snap) => {\n                let mapExpensa = snap.val();\n                mapExpensa.key = snap.key;\n                meses.push(mapExpensa);\n            });\n            this.setState({ meses });\n          });\n        } catch (error) {\n          this.setState({ readError: error.message });\n        }\n    }\n\n    render(){\n        return (\n            <Box p={4}>\n                <h1 className=\"sub-title\">Local {this.props.local}</h1>\n                <List className=\"list-expensa\">\n                    {this.state.meses.map(mes => (\n                        <ListItem className=\"list-expensa-row\">\n                            <div className=\"list-expensa-row-elem\">\n                                <h3>\n                                    {nombreMes(parseInt(mes.mes))}\n                                </h3>\n                            </div>\n\n                            <div className=\"list-expensa-row-elem list-expensa-btns\">\n                              {mes.info ? <ExpensasPDFButton porcentaje={this.props.porcentaje} \n                                      data={mes} btnName={\"Descargar\"} /> : \".\"}\n                            </div>\n                        </ListItem>\n                    ))}\n                </List>\n            </Box>\n        );\n    }\n}\n\nexport default Local","import React from 'react';\nimport './App.css'\n\nfunction WrongPage() {\n    return(\n       <h1>\n           La página que busca no existe\n       </h1>\n    )\n  }\n  \n  export default WrongPage;","import React, { Component } from 'react';\nimport {\n  Route,\n  BrowserRouter as Router,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\nimport Nav from './Nav';\nimport Home from './Home';\nimport ExpensasListado from './ExpensasListado';\nimport ExpensasCrear from './ExpensaCrear';\nimport ReportesListado from './ReportesListado';\nimport ReporteCrear from './ReporteCrear';\nimport Login from './Login';\nimport Local from './Local';\nimport WrongPage from './WrongPage'\nimport { auth } from \"./services/firebase\";\nimport { ThemeProvider, CSSReset, Box } from \"@chakra-ui/core\";\n\n\nfunction PrivateRoute({ component: Component, authenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        authenticated === true ? (\n          <Component {...props} />\n        ) : (\n            <Redirect\n              to={{ pathname: \"/login\", state: { from: props.location } }}\n            />\n          )\n      }\n    />\n  );\n}\n\nfunction PublicRoute({ component: Component, authenticated, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        authenticated === false ? (\n          <Component {...props} />\n        ) : (\n            <Redirect to=\"/home\" />\n          )\n      }\n    />\n  );\n}\n\nfunction Locales({ match }) {\n  var porcentaje = \"\";\n  var local_numero = match.params.id;\n  if (local_numero === \"1\") porcentaje = \"20\";\n  if (local_numero === \"2\") porcentaje = \"30\";\n  if (local_numero === \"3\" || local_numero === \"5\") porcentaje = \"17\";\n  if (local_numero === \"4\") porcentaje = \"16\";\n  if (porcentaje === \"\") return <WrongPage/>\n  return <Local porcentaje={porcentaje} local={local_numero}/>;\n}\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      authenticated: false,\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    auth().onAuthStateChanged(user => {\n      if (user) {\n        this.setState({\n          authenticated: true,\n          loading: false\n        });\n      } else {\n        this.setState({\n          authenticated: false,\n          loading: false\n        });\n      }\n    });\n  }\n\n  render() {\n    return this.state.loading === true ? (\n      <div className=\"spinner-border text-success\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </div>\n    ) : (\n        <Router>\n        <ThemeProvider>\n          <CSSReset />\n            <div className=\"web-body\">\n              <Nav authenticated={this.state.authenticated}  />\n              <Box p={4}>\n                <Switch>\n                  <Route path=\"/\" exact component={Home} />\n\n                  <PublicRoute\n                    path=\"/login\"\n                    authenticated={this.state.authenticated}\n                    component={Login}\n                  />\n                  \n                  {/* Expensas */}\n                  <PrivateRoute path=\"/expensas\" exact component={ExpensasListado} authenticated={this.state.authenticated} />\n                  <PrivateRoute path=\"/expensas/crear\" component={ExpensasCrear} authenticated={this.state.authenticated}/>\n                  <PrivateRoute path=\"/expensas/listado\" component={ExpensasListado} authenticated={this.state.authenticated}/>\n  \n                  {/* Reportes mensuales */}\n                  <PrivateRoute path=\"/reportes\" exact component={ReportesListado} authenticated={this.state.authenticated}/>\n                  <PrivateRoute path=\"/reportes/crear\" component={ReporteCrear} authenticated={this.state.authenticated}/>\n                  <PrivateRoute path=\"/reportes/listado\" component={ReportesListado} authenticated={this.state.authenticated}/>\n\n                  {/* Locales */}\n                  <PrivateRoute path=\"/local/:id\" exact component={Locales} authenticated={this.state.authenticated} />\n  \n                </Switch>\n              </Box>\n            </div>\n        </ThemeProvider>\n      </Router>\n      );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}